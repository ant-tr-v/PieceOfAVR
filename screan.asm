.equ PINB = $16
.equ DDRB = $17
.equ PORTB = $18
.equ PINC = $13
.equ DDRC = $14
.equ PORTC = $15
.equ PIND = $10
.equ DDRD = $11
.equ PORTD = $12
.equ SPH = $3e
.equ SPL = $3d
.def ZL= r30
.def ZH = r31

.cseg
rjmp RESET
main:
	in r18, PINC
	ldi ZH, high(symbols<<1) ;сохраняем в Z адрес таблицы
	ldi ZL, low(symbols<<1)
	ldi r16, $08 ;8 байт на символ
	sub_loop:
		clr r1
		in_sub_loop:
			lpm r0, Z+
			inc r1
			cpse r1, r16
			rjmp in_sub_loop
		dec r18
		brne sub_loop
		
	ldi r17, $2F ;для внутреннего цикла
	clr r1
	clr r3
	inc r3 ;r3 - столбец вывода
	inc r3 ;начинам с 2 тк ножка d0 отвалилась
	main_loop:
		clr r2
		lpm r4, Z+;
		out PORTB, r4
		out PORTD, r3
		loop:
			inc r2
			cpse r2, r17
			rjmp loop ;немного ждем, чтобы светодиоды загорелись
		lsl r3;переходим к следующему столбцу
		inc r1
		cpse r1, r16;если все вывели - выходим
		rjmp main_loop
	rjmp main

RESET:
	clr r16
	out DDRC, r16 ;portc -ввод, подтягивание не нужно тк pc6 - это reset
	ser r16
	out DDRD, r16;B и D - выводы
	out DDRB, r16
	ldi r16, $04;4 строчки - установка указателя стека
	out SPH, r16;у Atmega8a 1k sram
	ldi r16, $5f
	out SPL, r16
	rjmp main
	
symbols:
.db $FF, $FF, $FF, $FF, $FF, $FF, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00
.db $00, $00, $04, $02, $7f, $00, $00, $00, $00, $00, $62, $51, $49, $46, $00, $00
.db $00, $20, $42, $49, $49, $36, $00, $00, $00, $00, $0f, $08, $08, $7f, $00, $00
.db $00, $00, $2f, $49, $49, $31, $00, $00, $00, $00, $3e, $49, $49, $32, $00, $00
.db $00, $01, $01, $01, $01, $7f, $00, $00, $00, $00, $36, $49, $49, $36, $00, $00
.db $00, $00, $26, $49, $49, $3e, $00, $00, $00, $00, $3e, $41, $41, $3e, $00, $00
.db $00, $7c, $12, $11, $12, $7c, $00, $00, $00, $7F, $49, $49, $49, $79, $00, $00
.db $00, $7F, $49, $49, $49, $76, $00, $00, $00, $7F, $01, $01, $01, $01, $00, $00
.db $60, $3e, $21, $21, $21, $3e, $60, $00, $00, $7F, $49, $49, $49, $49, $00, $00
.db $41, $3e, $08, $7F, $08, $3e, $41, $00, $00, $22, $49, $49, $49, $36, $00, $00
.db $00, $7E, $20, $10, $08, $7E, $00, $00, $00, $7E, $20, $11, $08, $7E, $00, $00
.db $00, $7F, $08, $14, $22, $41, $00, $00, $00, $40, $3E, $01, $01, $7F, $00, $00
.db $7F, $02, $04, $08, $04, $02, $7F, $00, $00, $7f, $08, $08, $08, $7f, $00, $00
.db $00, $3e, $41, $41, $41, $3e, $00, $00, $00, $7f, $01, $01, $01, $7f, $00, $00
.db $00, $7f, $09, $09, $09, $06, $00, $00, $00, $7f, $09, $09, $09, $06, $00, $00
.db $00, $01, $01, $7f, $01, $01, $00, $00, $00, $27, $48, $48, $48, $3f, $00, $00
.db $0e, $11, $11, $7f, $11, $11, $0e, $00, $00, $63, $14, $08, $14, $63, $00, $00
.db $00, $3f, $20, $20, $20, $3f, $60, $00, $00, $07, $08, $08, $08, $7f, $00, $00
.db $00, $3f, $20, $3f, $20, $3f, $00, $00, $00, $3f, $20, $3f, $20, $3f, $60, $00
.db $00, $01, $7f, $48, $48, $30, $00, $00, $7f, $48, $48, $30, $00, $7f, $00, $00
.db $00, $7f, $48, $48, $30, $00, $00, $00, $00, $22, $49, $49, $49, $3e, $00, $00
.db $7f, $08, $3e, $41, $41, $41, $3e, $00, $00, $66, $19, $09, $09, $7f, $00, $00
.db $00, $7f, $41, $41, $41, $3e, $00, $00, $00, $7f, $09, $09, $09, $01, $00, $00
.db $00, $3e, $41, $41, $49, $3a, $08, $00, $00, $00, $00, $7f, $00, $00, $00, $00
.db $00, $00, $10, $40, $40, $3F, $00, $00, $00, $7f, $40, $40, $40, $40, $00, $00
.db $00, $7e, $08, $10, $20, $7e, $00, $00, $00, $3E, $41, $41, $41, $3E, $40, $00
.db $00, $7f, $09, $09, $39, $46, $00, $00, $00, $00, $26, $49, $49, $32, $00, $00
.db $00, $1F, $20, $20, $20, $1F, $00, $00, $01, $04, $10, $20, $10, $04, $01, $00
.db $7f, $20, $10, $08, $10, $20, $7f, $00, $01, $02, $04, $78, $04, $02, $01, $00
.db $00, $61, $51, $49, $45, $43, $00, $00, $3e, $2a, $2a, $00, $3e, $04, $22, $00



